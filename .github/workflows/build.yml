name: Build SGuardLimit Project

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  WDK_VERSION: "10.0.22621.0"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 步骤1：安装WDK（修复字符串引号问题）
    - name: Install WDK
      shell: powershell
      run: |
        # 下载WDK安装程序
        $wdkUrl = "https://go.microsoft.com/fwlink/?linkid=2166289"
        $installerPath = "$env:RUNNER_TEMP\wdksetup.exe"
        Write-Host "Downloading WDK from $wdkUrl..."
        Invoke-WebRequest -Uri $wdkUrl -OutFile $installerPath

        # 安装WDK（使用单引号定义路径）
        $installArgs = @(
          "/quiet",
          "/norestart",
          "/installpath `"C:\Program Files (x86)\Windows Kits\10`""
        )
        Start-Process -Wait -FilePath $installerPath -ArgumentList $installArgs

        # 验证安装（修复路径字符串）
        $ntifsPath = Join-Path "C:\Program Files (x86)\Windows Kits\10" "Include\$env:WDK_VERSION\km\ntifs.h"
        if (-not (Test-Path $ntifsPath)) {
          Write-Error "WDK installation failed - ntifs.h not found at $ntifsPath"
          Get-ChildItem "C:\Program Files (x86)\Windows Kits\10" -Recurse -Filter "ntifs.h" | Select-Object FullName
          exit 1
        }

    # 步骤2：配置环境变量
    - name: Setup Environment
      shell: powershell
      run: |
        # 使用Join-Path安全拼接路径
        $sdkDir = "C:\Program Files (x86)\Windows Kits\10"
        $env:WindowsSdkDir = $sdkDir
        $env:WindowsSDKVersion = $env:WDK_VERSION
        $env:INCLUDE = "$(Join-Path $sdkDir "Include\$env:WDK_VERSION\km");$(Join-Path $sdkDir "Include\$env:WDK_VERSION\shared");$env:INCLUDE"
        $env:LIB = "$(Join-Path $sdkDir "Lib\$env:WDK_VERSION\km\x64");$env:LIB"

        # 打印验证信息
        Write-Host "WDK paths configured:"
        Write-Host "INCLUDE = $env:INCLUDE"
        Write-Host "LIB = $env:LIB"

    # 步骤3：编译驱动项目
    - name: Build Driver
      shell: powershell
      run: |
        cd SGuardLimit_VMIO
        
        # 使用Join-Path处理路径
        $msbuildPath = (Get-Command msbuild).Source
        $includePath = "C:\Program Files (x86)\Windows Kits\10\Include\$env:WDK_VERSION\km"
        
        & $msbuildPath SGuardLimit_VMIO.vcxproj `
          /p:Configuration=Release `
          /p:Platform=x64 `
          /p:WindowsTargetPlatformVersion=$env:WDK_VERSION `
          /p:PlatformToolset=WindowsKernelModeDriver10.0 `
          /p:AdditionalIncludeDirectories="$includePath" `
          /p:PreprocessorDefinitions="WIN64;_AMD64_;NTDDI_VERSION=0x0A000006" `
          /flp:"LogFile=build.log;Verbosity=diagnostic"

        if (-not (Test-Path "x64\Release\Hutao.sys")) {
          Write-Error "Driver compilation failed!"
          Get-Content "build.log" -Tail 50 | Write-Host
          exit 1
        }

    # 步骤4：编译用户层程序
    - name: Build User Application
      shell: powershell
      run: |
        cd sguard_limit
        & (Get-Command msbuild).Source sguard_limit.sln `
          /p:Configuration=Release `
          /p:Platform=x64

    # 上传产物
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          SGuardLimit_VMIO/x64/Release/Hutao.sys
          sguard_limit/x64/Release/*.exe
